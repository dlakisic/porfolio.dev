---
import Dropdown from './Dropdown.astro'
import { useTranslations } from '../i18n/utils'

const currentLocale = Astro.currentLocale || 'fr'

const LOCALES = {
  fr: 'FR',
  en: 'EN'
} as const

const LOCALES_URLS = {
  fr: '/',
  en: '/en'
}

const currentPath = Astro.url.pathname
---

<Dropdown 
  id="language" 
  triggerClass="relative hover:text-yellow-500 dark:hover:text-yellow-400 transition text-gray-600 dark:text-gray-200"
>
  <Fragment slot="trigger">
    <span id="current-lang">{LOCALES[currentLocale]}</span>
  </Fragment>
  
  <Fragment slot="menu">
    {Object.entries(LOCALES).map(([locale, label]) => (
      <li class="language-menu-option px-2 py-1.5 cursor-default hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm" data-lang={locale} data-label={label}>
        {label}
      </li>
    ))}
  </Fragment>
</Dropdown>

<script>
const LOCALES = {
  fr: 'FR',
  en: 'EN'
}

document.addEventListener('DOMContentLoaded', () => {
  const currentLangSpan = document.getElementById('current-lang')
  
  if (currentLangSpan) {
    const currentLang = localStorage.getItem('lang') || 'fr'
    currentLangSpan.textContent = LOCALES[currentLang]
    
    // Setup language option handlers
    const languageOptions = document.querySelectorAll('.language-menu-option')
    languageOptions.forEach(langButton => {
      langButton.addEventListener('click', (e) => {
        const target = e.target as HTMLElement
        const newLang = target.dataset.lang || 'fr'
        const label = target.dataset.label || LOCALES[newLang]
        
        localStorage.setItem('lang', newLang)
        currentLangSpan.textContent = label
        
        window.dispatchEvent(new StorageEvent('storage', {
          key: 'lang',
          newValue: newLang,
          oldValue: currentLang,
          storageArea: localStorage
        }))
      })
    })
  }
})
</script>
---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Python from "./icons/Python.astro"
import GoogleSheets from "./icons/GoogleSheets.astro"
import Streamlit from "./icons/Streamlit.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import Lambda from "./icons/Lambda.astro"
import D3 from "./icons/D3.astro"
import React from "./icons/React.astro"
import TypeScript from "./icons/TypeScript.astro"
import FastAPI from "./icons/FastAPI.astro"
import OpenAI from "./icons/OpenAI.astro"
import ML from "./icons/ML.astro"
import { useTranslations, getCurrentLanguage } from '../i18n/utils'

const currentLang = getCurrentLanguage()
const t = useTranslations(currentLang)

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-[#306998] text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#306998] text-white",
    icon: Tailwind,
  },
  PYTHON: {
    name: "Python",
    class: "bg-[#306998] text-white",
    icon: Python,
  },
  GOOGLE_SHEETS: {
    name: "Google Sheets",
    class: "bg-[#306998] text-white",
    icon: GoogleSheets,
  },
  STREAMLIT: {
    name: "Streamlit",
    class: "bg-[#306998] text-white",
    icon: Streamlit,
  },
  LAMBDA: {
    name: "AWS Lambda",
    class: "bg-[#306998] text-white",
    icon: Lambda,
  },
  D3: {
    name: "D3.js",
    class: "bg-[#306998] text-white",
    icon: D3,
  },
  REACT: {
    name: "React",
    class: "bg-[#306998] text-white",
    icon: React,
  },
  TYPESCRIPT: {
    name: "TypeScript",
    class: "bg-[#306998] text-white",
    icon: TypeScript,
  },
  FASTAPI: {
    name: "FastAPI",
    class: "bg-[#306998] text-white",
    icon: FastAPI,
  },
  OPENAI: {
    name: "OpenAI",
    class: "bg-[#306998] text-white",
    icon: OpenAI,
  },
  ML: {
    name: "Machine Learning",
    class: "bg-[#306998] text-white",
    icon: ML,
  },
}
const PROJECTS = [
  {
    id: "clustering",
    title: t('projects.clustering_title'),
    description: t('projects.clustering_description'),
    link: "/clustering",
    image: "/projects/clustering_lepoool.webp",
    tags: [TAGS.PYTHON, TAGS.FASTAPI, TAGS.STREAMLIT, TAGS.OPENAI, TAGS.ML, TAGS.TYPESCRIPT, TAGS.REACT, TAGS.D3],
  },
  {
    id: "budget",
    title: t('projects.budget_title'),
    description: t('projects.budget_description'),
    link: "https://docs.google.com/spreadsheets/d/1NvhKyCqQK515gzzyhcQUO0TfHJLnYhUB1hptQ-sZAT0/edit?usp=sharing",
    github: "https://github.com/dlakisic/BudgetTracking_CreditAgricole_Gsheet",
    image: "/projects/Budget_tracking.webp",
    tags: [TAGS.PYTHON, TAGS.GOOGLE_SHEETS, TAGS.LAMBDA],
  },
  {
    id: "ips",
    title: t('projects.ips_title'),
    description: t('projects.ips_description'),
    link: "https://ips-dashboard.streamlit.app/",
    github: "https://github.com/dlakisic/IPS_dashboard",
    image: "/projects/Streamlit_IPS.webp",
    tags: [TAGS.PYTHON, TAGS.STREAMLIT],
  },
  {
    id: "hackathon_ft",
    title: t('projects.hackathon_ft_title'),
    description: t('projects.hackathon_ft_description'),
    link: "https://lepoool.tech/pour-les-10-ans-de-la-french-tech-nous-avons-teste-pour-vous-lia-generative-retour-sur-le-hackathon/",
    image: "/projects/Premier-prix-Hackathon.jpeg",
    tags: [TAGS.PYTHON, TAGS.STREAMLIT],
  },
  {
    id: "hackathon_additi",
    title: t('projects.hackathon_additi_title'),
    description: t('projects.hackathon_additi_description'),
    more: "https://www.linkedin.com/posts/additi_additi-hackathon-rennes-activity-7212478373690830848-AWkt?utm_source=share&utm_medium=member_desktop",
    image: "/projects/Adds_of_the_Tiger.jpeg",
    tags: [TAGS.PYTHON, TAGS.STREAMLIT],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ id, image, title, description, tags, link, github, more }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img alt={title} class="object-cover object-top w-full h-56 transition duration-500 sm:h-full scale-100" loading="lazy" src={image} />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100" data-translate={`projects.${id}_title`}>
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-wrap mb-2 gap-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 whitespace-nowrap`}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400" data-translate={`projects.${id}_description`}>
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  <span data-i18n="projects.code_button">{t("projects.code_button")}</span>
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  <span data-i18n="projects.preview_button">{t("projects.preview_button")}</span>
                </LinkButton>
              )}
              {more && (
                <LinkButton href={more}>
                  <Link class="size-4" />
                  <span data-i18n="projects.learn_more_button">{t("projects.learn_more_button")}</span>
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>

<script>
  import { translations } from '../i18n/utils'
  type LanguageKey = 'fr' | 'en'

  function updateTranslations() {
    const lang = (localStorage.getItem('lang') || 'fr') as LanguageKey
    const elements = document.querySelectorAll<HTMLElement>('[data-translate]')
    
    elements.forEach(el => {
      const key = el.getAttribute('data-translate')
      if (key) {
        const [section, item] = key.split('.')
        try {
          const sectionData = translations[lang]?.[section as keyof typeof translations[LanguageKey]]
          const translation = sectionData?.[item]
          if (typeof translation === 'string') {
            el.textContent = translation
          }
        } catch (error) {
          console.warn(`Translation missing for ${key} in ${lang}`)
        }
      }
    })
  }

  document.addEventListener('astro:page-load', updateTranslations)
  window.addEventListener('storage', (e) => {
    if (e.key === 'lang') {
      updateTranslations()
    }
  })
</script>